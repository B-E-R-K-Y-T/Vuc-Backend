"""init db

Revision ID: f7da5b70c3b8
Revises: 
Create Date: 2024-03-03 23:33:49.131068

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "f7da5b70c3b8"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "admins",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "name",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.Column(
            "email",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.Column(
            "password",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "day",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("weekday", sa.Integer(), nullable=False),
        sa.Column("semester", sa.Integer(), nullable=False),
        sa.Column("holiday", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "platoon",
        sa.Column("platoon_number", sa.Integer(), nullable=False),
        sa.Column("vus", sa.Integer(), nullable=False),
        sa.Column("semester", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("platoon_number"),
    )
    op.create_table(
        "student",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "name",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.Column(
            "phone",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.Column("date_of_birth", sa.Date(), nullable=False),
        sa.Column(
            "mail",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.Column(
            "address",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.Column(
            "institute",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.Column(
            "direction_of_study",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.Column(
            "group_study",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.Column("platoon_number", sa.Integer(), nullable=False),
        sa.Column("vus", sa.Integer(), nullable=False),
        sa.Column("squad_number", sa.Integer(), nullable=False),
        sa.Column("telegram_id", sa.Integer(), nullable=False),
        sa.Column(
            "token",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.Column(
            "role",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "schedule",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "aud",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.Column("platoon_number", sa.Integer(), nullable=False),
        sa.Column("day_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["day_id"],
            ["day.id"],
        ),
        sa.ForeignKeyConstraint(
            ["platoon_number"],
            ["platoon.platoon_number"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "subject",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("platoon_id", sa.Integer(), nullable=False),
        sa.Column("semester", sa.Integer(), nullable=False),
        sa.Column("admin_id", sa.Integer(), nullable=False),
        sa.Column(
            "name",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["platoon_id"],
            ["platoon.platoon_number"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "name",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.Column(
            "phone",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.Column("date_of_birth", sa.Date(), nullable=False),
        sa.Column(
            "address",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.Column(
            "institute",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.Column(
            "direction_of_study",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.Column("platoon_number", sa.Integer(), nullable=False),
        sa.Column("squad_number", sa.Integer(), nullable=False),
        sa.Column(
            "role",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.Column("telegram_id", sa.Integer(), nullable=False),
        sa.Column(
            "token",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.Column(
            "group_study",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("registered_at", sa.DateTime(), nullable=False),
        sa.Column(
            "hashed_password",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=True,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("is_verified", sa.Boolean(), nullable=False),
        sa.CheckConstraint(
            "squad_number IN (1, 2, 3)", name="squad_number_check_c"
        ),
        sa.ForeignKeyConstraint(
            ["platoon_number"],
            ["platoon.platoon_number"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("telegram_id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_table(
        "attend",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("date_v", sa.Date(), nullable=False),
        sa.Column("visiting", sa.Integer(), nullable=False),
        sa.Column("semester", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "grading",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("subj_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("mark", sa.Integer(), nullable=False),
        sa.Column("mark_date", sa.Date(), nullable=False),
        sa.Column(
            "theme",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["subj_id"],
            ["subject.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "message_queue",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("telegram_id", sa.Integer(), nullable=False),
        sa.Column(
            "message",
            sa.String().with_variant(sa.String(length=255), "postgresql"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["telegram_id"],
            ["user.telegram_id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("message_queue")
    op.drop_table("grading")
    op.drop_table("attend")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_table("subject")
    op.drop_table("schedule")
    op.drop_table("student")
    op.drop_table("platoon")
    op.drop_table("day")
    op.drop_table("admins")
    # ### end Alembic commands ###
